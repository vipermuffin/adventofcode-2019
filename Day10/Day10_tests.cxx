//
//  Advent of Code 2019 Tests: Day 10
//
//  https://adventofcode.com/2019
//
//  Created by vipermuffin on 12/10/2019.
//  Copyright Â© 2019 vipermuffin. All rights reserved.
//

#include "Day10.h"
#include "gtest/gtest.h"
#include <iostream>
#include <string>

namespace AocDay10{
    extern std::string solvea();
    extern std::string solveb();
}

using namespace std;
using namespace AocDay10;

TEST(Y2019_SolveDay10, FinalSolutionPartA) {
    EXPECT_EQ("256", solvea());
}

TEST(Y2019_SolveDay10, FinalSolutionPartB) {
    EXPECT_EQ("---", solveb());
}

TEST(Y2019_Day10Example,Test1a) {
    vector<string> m{
        ".#..#",
        ".....",
        "#####",
        "....#",
        "...##"
    };
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 1, 0));
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 4, 0));
    
    EXPECT_EQ(6,DetermineVisibleAsteroidsAtPos(m, 0, 2));
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 1, 2));
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 2, 2));
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 3, 2));
    EXPECT_EQ(5,DetermineVisibleAsteroidsAtPos(m, 4, 2));
    
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 4, 3));
    
    EXPECT_EQ(8,DetermineVisibleAsteroidsAtPos(m, 3, 4));
    EXPECT_EQ(7,DetermineVisibleAsteroidsAtPos(m, 4, 4));
}

TEST(Y2019_Day10Example,Test1b) {
    vector<string> m{
        ".#..#",
        ".....",
        "#####",
        "....#",
        "...##"
    };
    EXPECT_EQ(8,DetermineMaxAsteroids(m));
}

TEST(Y2019_Day10Example,Test2a) {
    vector<string> m {
    "......#.#.",
    "#..#.#....",
    "..#######.",
    ".#.#.###..",
    ".#..#.....",
    "..#....#.#",
    "#..#....#.",
    ".##.#..###",
    "##...#..#.",
    ".#....####"
    };
    EXPECT_EQ(33,DetermineVisibleAsteroidsAtPos(m, 5, 8));
}

TEST(Y2019_Day10Example,Test2b) {
    vector<string> m {
    "......#.#.",
    "#..#.#....",
    "..#######.",
    ".#.#.###..",
    ".#..#.....",
    "..#....#.#",
    "#..#....#.",
    ".##.#..###",
    "##...#..#.",
    ".#....####"
    };
    EXPECT_EQ(33,DetermineMaxAsteroids(m));
}

TEST(Y2019_Day10Example,Test3) {
    vector<string> m {
    "#.#...#.#.",
    ".###....#.",
    ".#....#...",
    "##.#.#.#.#",
    "....#.#.#.",
    ".##..###.#",
    "..#...##..",
    "..##....##",
    "......#...",
    ".####.###."
    };
    EXPECT_EQ(35,DetermineVisibleAsteroidsAtPos(m, 1, 2));
}

TEST(Y2019_Day10Example,Test4) {
    vector<string> m {
    ".#..#..###",
    "####.###.#",
    "....###.#.",
    "..###.##.#",
    "##.##.#.#.",
    "....###..#",
    "..#.#..#.#",
    "#..#.#.###",
    ".##...##.#",
    ".....#.#.."
    };
    EXPECT_EQ(41,DetermineVisibleAsteroidsAtPos(m, 6, 3));
}

TEST(Y2019_Day10Example,Test5) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    EXPECT_EQ(210,DetermineVisibleAsteroidsAtPos(m, 11, 13));
}

TEST(Y2019_Day10Example,Test6a) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 1, 11, 13);
    EXPECT_EQ(11,x.first);
    EXPECT_EQ(12,x.second);
}

TEST(Y2019_Day10Example,Test6b) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 2, 11, 13);
    EXPECT_EQ(12,x.first);
    EXPECT_EQ(1,x.second);
}

TEST(Y2019_Day10Example,Test6c) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 3, 11, 13);
    EXPECT_EQ(12,x.first);
    EXPECT_EQ(2,x.second);
}

TEST(Y2019_Day10Example,Test6d) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 10, 11, 13);
    EXPECT_EQ(12,x.first);
    EXPECT_EQ(8,x.second);
}

TEST(Y2019_Day10Example,Test6e) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 20, 11, 13);
    EXPECT_EQ(16,x.first);
    EXPECT_EQ(0,x.second);
}

TEST(Y2019_Day10Example,Test6f) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 50, 11, 13);
    EXPECT_EQ(16,x.first);
    EXPECT_EQ(9,x.second);
}

TEST(Y2019_Day10Example,Test6g) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 100, 11, 13);
    EXPECT_EQ(10,x.first);
    EXPECT_EQ(16,x.second);
}

TEST(Y2019_Day10Example,Test6h) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 199, 11, 13);
    EXPECT_EQ(9,x.first);
    EXPECT_EQ(6,x.second);
}

TEST(Y2019_Day10Example,Test6i) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 200, 11, 13);
    EXPECT_EQ(8,x.first);
    EXPECT_EQ(2,x.second);
}

TEST(Y2019_Day10Example,Test6j) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 201, 11, 13);
    EXPECT_EQ(10,x.first);
    EXPECT_EQ(9,x.second);
}

TEST(Y2019_Day10Example,Test6k) {
    vector<string> m {
        ".#..##.###...#######",
        "##.############..##.",
        ".#.######.########.#",
        ".###.#######.####.#.",
        "#####.##.#.##.###.##",
        "..#####..#.#########",
        "####################",
        "#.####....###.#.#.##",
        "##.#################",
        "#####.##.###..####..",
        "..######..##.#######",
        "####.##.####...##..#",
        ".#####..#.######.###",
        "##...#.##########...",
        "#.##########.#######",
        ".####.#.###.###.#.##",
        "....##.##.###..#####",
        ".#.#.###########.###",
        "#.#.#.#####.####.###",
        "###.##.####.##.#..##"
    };
    auto x = DestroyNumAsteroids(m, 299, 11, 13);
    EXPECT_EQ(11,x.first);
    EXPECT_EQ(1,x.second);
}
